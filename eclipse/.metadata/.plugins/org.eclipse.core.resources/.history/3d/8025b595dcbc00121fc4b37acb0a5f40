package aufgabe3.philosophers.control;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;

import javax.management.RuntimeErrorException;

import aufgabe3.philosophers.*;

public class PhilosopherController {
	
	private final ArrayList<Seat> seats = new ArrayList<Seat>();
	private final HashSet<Philosopher> meditationRoom = new HashSet<Philosopher>();
	
	
	public PhilosopherController(final Collection<Philosopher> philosophers) {
		super();
		
		if (philosophers == null || philosophers.isEmpty())
			throw new RuntimeErrorException(null, "You have to initialize the Philosopher controller with philosophers.");
		
		meditationRoom.addAll(philosophers);
	}

	
	public boolean seatPhilosopher(final Philosopher phil) {
		boolean success = false;
		
		synchronized(seats) {
			for (final Seat seat : seats) {
				if (seat.canBeTaken()) {
					phil.assignSeat(seat);
					
					success = true;
					break;
				}
			}
		}
		
		return success;
	}
	
	public void takeSeatFromPhilosopher(final Philosopher phil) {
		
	}
}
